/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package pe.congreso.leyes;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Enlaces extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3946002362626290372L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Enlaces\",\"namespace\":\"pe.congreso.leyes\",\"fields\":[{\"name\":\"seguimiento\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"expediente\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"opiniones_publicadas\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"opiniones_publicar\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Enlaces> ENCODER =
      new BinaryMessageEncoder<Enlaces>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Enlaces> DECODER =
      new BinaryMessageDecoder<Enlaces>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Enlaces> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Enlaces> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Enlaces> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Enlaces>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Enlaces to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Enlaces from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Enlaces instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Enlaces fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String seguimiento;
   private java.lang.String expediente;
   private java.lang.String opiniones_publicadas;
   private java.lang.String opiniones_publicar;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Enlaces() {}

  /**
   * All-args constructor.
   * @param seguimiento The new value for seguimiento
   * @param expediente The new value for expediente
   * @param opiniones_publicadas The new value for opiniones_publicadas
   * @param opiniones_publicar The new value for opiniones_publicar
   */
  public Enlaces(java.lang.String seguimiento, java.lang.String expediente, java.lang.String opiniones_publicadas, java.lang.String opiniones_publicar) {
    this.seguimiento = seguimiento;
    this.expediente = expediente;
    this.opiniones_publicadas = opiniones_publicadas;
    this.opiniones_publicar = opiniones_publicar;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return seguimiento;
    case 1: return expediente;
    case 2: return opiniones_publicadas;
    case 3: return opiniones_publicar;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: seguimiento = value$ != null ? value$.toString() : null; break;
    case 1: expediente = value$ != null ? value$.toString() : null; break;
    case 2: opiniones_publicadas = value$ != null ? value$.toString() : null; break;
    case 3: opiniones_publicar = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'seguimiento' field.
   * @return The value of the 'seguimiento' field.
   */
  public java.lang.String getSeguimiento() {
    return seguimiento;
  }


  /**
   * Sets the value of the 'seguimiento' field.
   * @param value the value to set.
   */
  public void setSeguimiento(java.lang.String value) {
    this.seguimiento = value;
  }

  /**
   * Gets the value of the 'expediente' field.
   * @return The value of the 'expediente' field.
   */
  public java.lang.String getExpediente() {
    return expediente;
  }


  /**
   * Sets the value of the 'expediente' field.
   * @param value the value to set.
   */
  public void setExpediente(java.lang.String value) {
    this.expediente = value;
  }

  /**
   * Gets the value of the 'opiniones_publicadas' field.
   * @return The value of the 'opiniones_publicadas' field.
   */
  public java.lang.String getOpinionesPublicadas() {
    return opiniones_publicadas;
  }


  /**
   * Sets the value of the 'opiniones_publicadas' field.
   * @param value the value to set.
   */
  public void setOpinionesPublicadas(java.lang.String value) {
    this.opiniones_publicadas = value;
  }

  /**
   * Gets the value of the 'opiniones_publicar' field.
   * @return The value of the 'opiniones_publicar' field.
   */
  public java.lang.String getOpinionesPublicar() {
    return opiniones_publicar;
  }


  /**
   * Sets the value of the 'opiniones_publicar' field.
   * @param value the value to set.
   */
  public void setOpinionesPublicar(java.lang.String value) {
    this.opiniones_publicar = value;
  }

  /**
   * Creates a new Enlaces RecordBuilder.
   * @return A new Enlaces RecordBuilder
   */
  public static pe.congreso.leyes.Enlaces.Builder newBuilder() {
    return new pe.congreso.leyes.Enlaces.Builder();
  }

  /**
   * Creates a new Enlaces RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Enlaces RecordBuilder
   */
  public static pe.congreso.leyes.Enlaces.Builder newBuilder(pe.congreso.leyes.Enlaces.Builder other) {
    if (other == null) {
      return new pe.congreso.leyes.Enlaces.Builder();
    } else {
      return new pe.congreso.leyes.Enlaces.Builder(other);
    }
  }

  /**
   * Creates a new Enlaces RecordBuilder by copying an existing Enlaces instance.
   * @param other The existing instance to copy.
   * @return A new Enlaces RecordBuilder
   */
  public static pe.congreso.leyes.Enlaces.Builder newBuilder(pe.congreso.leyes.Enlaces other) {
    if (other == null) {
      return new pe.congreso.leyes.Enlaces.Builder();
    } else {
      return new pe.congreso.leyes.Enlaces.Builder(other);
    }
  }

  /**
   * RecordBuilder for Enlaces instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Enlaces>
    implements org.apache.avro.data.RecordBuilder<Enlaces> {

    private java.lang.String seguimiento;
    private java.lang.String expediente;
    private java.lang.String opiniones_publicadas;
    private java.lang.String opiniones_publicar;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(pe.congreso.leyes.Enlaces.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.seguimiento)) {
        this.seguimiento = data().deepCopy(fields()[0].schema(), other.seguimiento);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.expediente)) {
        this.expediente = data().deepCopy(fields()[1].schema(), other.expediente);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.opiniones_publicadas)) {
        this.opiniones_publicadas = data().deepCopy(fields()[2].schema(), other.opiniones_publicadas);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.opiniones_publicar)) {
        this.opiniones_publicar = data().deepCopy(fields()[3].schema(), other.opiniones_publicar);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing Enlaces instance
     * @param other The existing instance to copy.
     */
    private Builder(pe.congreso.leyes.Enlaces other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.seguimiento)) {
        this.seguimiento = data().deepCopy(fields()[0].schema(), other.seguimiento);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.expediente)) {
        this.expediente = data().deepCopy(fields()[1].schema(), other.expediente);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.opiniones_publicadas)) {
        this.opiniones_publicadas = data().deepCopy(fields()[2].schema(), other.opiniones_publicadas);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.opiniones_publicar)) {
        this.opiniones_publicar = data().deepCopy(fields()[3].schema(), other.opiniones_publicar);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'seguimiento' field.
      * @return The value.
      */
    public java.lang.String getSeguimiento() {
      return seguimiento;
    }


    /**
      * Sets the value of the 'seguimiento' field.
      * @param value The value of 'seguimiento'.
      * @return This builder.
      */
    public pe.congreso.leyes.Enlaces.Builder setSeguimiento(java.lang.String value) {
      validate(fields()[0], value);
      this.seguimiento = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'seguimiento' field has been set.
      * @return True if the 'seguimiento' field has been set, false otherwise.
      */
    public boolean hasSeguimiento() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'seguimiento' field.
      * @return This builder.
      */
    public pe.congreso.leyes.Enlaces.Builder clearSeguimiento() {
      seguimiento = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'expediente' field.
      * @return The value.
      */
    public java.lang.String getExpediente() {
      return expediente;
    }


    /**
      * Sets the value of the 'expediente' field.
      * @param value The value of 'expediente'.
      * @return This builder.
      */
    public pe.congreso.leyes.Enlaces.Builder setExpediente(java.lang.String value) {
      validate(fields()[1], value);
      this.expediente = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'expediente' field has been set.
      * @return True if the 'expediente' field has been set, false otherwise.
      */
    public boolean hasExpediente() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'expediente' field.
      * @return This builder.
      */
    public pe.congreso.leyes.Enlaces.Builder clearExpediente() {
      expediente = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'opiniones_publicadas' field.
      * @return The value.
      */
    public java.lang.String getOpinionesPublicadas() {
      return opiniones_publicadas;
    }


    /**
      * Sets the value of the 'opiniones_publicadas' field.
      * @param value The value of 'opiniones_publicadas'.
      * @return This builder.
      */
    public pe.congreso.leyes.Enlaces.Builder setOpinionesPublicadas(java.lang.String value) {
      validate(fields()[2], value);
      this.opiniones_publicadas = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'opiniones_publicadas' field has been set.
      * @return True if the 'opiniones_publicadas' field has been set, false otherwise.
      */
    public boolean hasOpinionesPublicadas() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'opiniones_publicadas' field.
      * @return This builder.
      */
    public pe.congreso.leyes.Enlaces.Builder clearOpinionesPublicadas() {
      opiniones_publicadas = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'opiniones_publicar' field.
      * @return The value.
      */
    public java.lang.String getOpinionesPublicar() {
      return opiniones_publicar;
    }


    /**
      * Sets the value of the 'opiniones_publicar' field.
      * @param value The value of 'opiniones_publicar'.
      * @return This builder.
      */
    public pe.congreso.leyes.Enlaces.Builder setOpinionesPublicar(java.lang.String value) {
      validate(fields()[3], value);
      this.opiniones_publicar = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'opiniones_publicar' field has been set.
      * @return True if the 'opiniones_publicar' field has been set, false otherwise.
      */
    public boolean hasOpinionesPublicar() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'opiniones_publicar' field.
      * @return This builder.
      */
    public pe.congreso.leyes.Enlaces.Builder clearOpinionesPublicar() {
      opiniones_publicar = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Enlaces build() {
      try {
        Enlaces record = new Enlaces();
        record.seguimiento = fieldSetFlags()[0] ? this.seguimiento : (java.lang.String) defaultValue(fields()[0]);
        record.expediente = fieldSetFlags()[1] ? this.expediente : (java.lang.String) defaultValue(fields()[1]);
        record.opiniones_publicadas = fieldSetFlags()[2] ? this.opiniones_publicadas : (java.lang.String) defaultValue(fields()[2]);
        record.opiniones_publicar = fieldSetFlags()[3] ? this.opiniones_publicar : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Enlaces>
    WRITER$ = (org.apache.avro.io.DatumWriter<Enlaces>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Enlaces>
    READER$ = (org.apache.avro.io.DatumReader<Enlaces>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.seguimiento);

    out.writeString(this.expediente);

    if (this.opiniones_publicadas == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.opiniones_publicadas);
    }

    if (this.opiniones_publicar == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.opiniones_publicar);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.seguimiento = in.readString();

      this.expediente = in.readString();

      if (in.readIndex() != 0) {
        in.readNull();
        this.opiniones_publicadas = null;
      } else {
        this.opiniones_publicadas = in.readString();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.opiniones_publicar = null;
      } else {
        this.opiniones_publicar = in.readString();
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.seguimiento = in.readString();
          break;

        case 1:
          this.expediente = in.readString();
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.opiniones_publicadas = null;
          } else {
            this.opiniones_publicadas = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.opiniones_publicar = null;
          } else {
            this.opiniones_publicar = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










